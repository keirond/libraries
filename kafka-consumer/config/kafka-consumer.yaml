# non-null string, format = host1:port1,host2:port2,...
bootstrap-servers: "localhost:9092"
#key-serializer, value-serializer

# int (bytes), default = 1
fetch-min-bytes: 1
# int (bytes), default = 52428800 (50 Mb)
fetch-max-bytes: 52428800
# int (ms), default = 500
fetch-max-wait-ms: 500

# group-id
# group-protocol, group-remote-assignor
# group-instance-id
# partition-assignment-strategy

# int, default = 500, on only one partition
max-poll-records: 500
# int (ms), default = 300000 (5 minutes)
max-poll-interval-ms: 300000

# int (ms), default = 3000 (3 seconds)
heartbeat-interval-ms: 3000
# int (ms), default = 45000 (45 seconds)
session-timeout-ms: 45000

# int (bytes), default = 65536 (64 kibibytes), -1 OS default will be used.
receive-buffer-bytes: 65536
# int (ms), default = 30000 (30 seconds)
request-timeout-ms: 30000
# long (ms), default = 100, base delay before the first retry
# This value is the initial backoff value and will increase exponentially for each failed request,
# up to the retry.backoff.max.ms value.
retry-backoff-ms: 100
# long (ms), default = 1000 (1 second), upper limit of the delay
# used as a constant backoff without any exponential increase
retry-backoff-max-ms: 1000

# boolean, default = true, broker config has to enabled
allow-auto-create-topics: true
# string [latest, earliest, none, by_duration:PnDTnHnMn.nS], default = latest
auto-offset-reset: latest
# boolean, default = true
enable-auto-commit: true
auto-commit-interval-ms: 5000 # int, default = 5000 (5 seconds)
# boolean, default = true
# Whether internal topics matching a subscribed pattern should be excluded from the subscription.
exclude-internal-topics: true

#isolation-level: [read_committed, read_uncommitted]

# string, default = ""
client-id: "performance-testing"
# client-rack
# long (ms), default = 540000 (9 minutes)
connections-max-idle-ms: 540000
# int (ms), default = 60000 (1 minutes)
default-api-timeout-ms: 60000
# long (ms), default = 50, base delay before the first retry
# This value is the initial backoff value and will increase exponentially for each failed request,
# up to the retry.backoff.max.ms value.
reconnect-backoff-ms: 50
# long (ms), default = 1000 (1 second), upper limit of the delay
# used as a constant backoff without any exponential increase
reconnect-backoff-max-ms: 1000

enable-metrics-push: true # true by default
#metric.**!!

#metadata.**!!

#client-dns-lookup: use_all_dns_ips
#security.**!!
#ssl.**!!
#sasl.**!!
#socket.**!!
